#!/usr/local/rvm/rubies/geocaching/bin/ruby

require 'net/http'
require 'dm-core'
require 'dm-migrations'
require 'dm-mysql-adapter'
require 'dm-ar-finders'
require 'dm-types'

STDOUT.sync = true

settings = YAML.load_file("settings.yaml")
database = settings[:database]
geocaching = settings[:geocaching]
paths = settings[:paths]

DataMapper.setup(:default, database)

DataMapper::Inflector.inflections do |inflect|
	inflect.singular 'caches', 'cache'
end

Dir.glob('./lib/*.rb').each{|f| load "./#{f}"}

DataMapper.auto_upgrade!

HttpInterface.credentials = geocaching
Export.file_root_hash = paths
Cacher.guid = geocaching[:guid]

puts "Define some things"
auto_update = CacheList.first(name: "auto update")
active_caches = Cache.all(found_by_me: false, archived: false, :geolocation.not => nil)
local_caches = []
known_caches = []

puts "Update list of caches found by me (and fetch caches not yet in database)"
Cache.found_by_me

puts "Update caches that I found, but that don't have a found date yet (probably found today)"
Cache.all(found_by_me: true, found_date: nil).first(50).each{|c|
	c.update_from_site!
}

puts "Update recent finds (but not too recent)"
Cache.all(found_by_me: true, :last_update.lt => DateTime.now - 1, :found_date.gt => DateTime.now - 3).each{|c|
	c.update_from_site!
}

puts "Update caches with no geolocation"
Cache.all(geolocation: nil).first(50).each{|c|
	c.update_from_site!
}

puts "Update auto-update list"
auto_update.update_caches_from_site

puts "Update list of caches near Rotselaar"
c_r = Cache.add_all_by_gcid Cache.find_near(Location.rotselaar, 10)
local_caches += c_r
dist = c_r.last.distance_from(Location.rotselaar)
known_caches += active_caches.select{|c| c.distance_from(Location.rotselaar) < dist}
puts "Known caches in the radius: #{known_caches.size}"

puts "Update list of caches near Oud-Heverlee"
c_o = Cache.add_all_by_gcid Cache.find_near(Location.oud_heverlee, 2)
local_caches += c_o
dist = c_o.last.distance_from(Location.oud_heverlee)
known_caches += active_caches.select{|c| c.distance_from(Location.oud_heverlee) < dist}
puts "Known caches in the radius: #{known_caches.size}"

puts "Update list of caches near Leuven"
c_l =Cache.add_all_by_gcid Cache.find_near(Location.leuven, 2)
local_caches += c_l
dist = c_l.last.distance_from(Location.leuven)
known_caches += active_caches.select{|c| c.distance_from(Location.leuven) < dist}
puts "Known caches in the radius: #{known_caches.size}"

puts "Update list of caches near Wijgmaal"
c_w = Cache.add_all_by_gcid Cache.find_near(Location.wijgmaal, 2)
local_caches += c_w
dist = c_w.last.distance_from(Location.wijgmaal)
known_caches += active_caches.select{|c| c.distance_from(Location.wijgmaal) < dist}
puts "Known caches in the radius: #{known_caches.size}"

local_caches.uniq!
known_caches.uniq!

gone_caches = known_caches - local_caches
puts "Gone caches in the radius: #{gone_caches.size}"

puts "Update old caches on auto-update list (oldest 100):"
auto_update.caches.all(:last_update.lt => DateTime.now - 5, :order => :last_update).first(100).each{|c|
	c.update_from_site!
}

puts "Update 'gone' local caches:"
Cache.all(id: gone_caches.map(&:id), :last_update.lt => DateTime.now - 1, :archived => false, :order => :last_update).each{|c|
	c.update_from_site!
}

puts "Update old local caches (oldest 100):"
Cache.all(id: local_caches.map(&:id), :last_update.lt => DateTime.now - 7, :archived => false, :order => :last_update).first(100).each{|c|
	c.update_from_site!
}

puts "Update remaining old caches in database (oldest 200):"
Cache.all(:archived => false, :found_by_me => false, :last_update.lt => DateTime.now - 100, :order => :last_update).first(200).each{|c|
	c.update_from_site!
}
Cache.all(:last_update.lt => DateTime.now - 60, :order => :last_update).first(10).each{|c|
	c.update_from_site!
}

puts "Update purge candidates (limit 30):"
Cache.all(found_by_me: false, archived: true, :archived_date.lt => DateTime.now - 59, :last_update.lt => DateTime.now - 10, :order => :last_update).first(30).each{|c|
	c.update_from_site!
}

puts "Destroying long-time archived caches:"
Cache.all(found_by_me: false, archived: true, :archived_date.lt => DateTime.now - 80).each{|c|
	puts "Destroying #{c}"
	c.destroy
}

puts "Export gpx files"
Export.gpx_collections

puts "Export pdfs and notes (for changed caches)"
Cache.all(:last_update.gt => DateTime.now - 1).each{|c|
	c.update_files
}

nil
